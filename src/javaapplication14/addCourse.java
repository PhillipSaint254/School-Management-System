/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication14;

import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javaapplication14.indexPage.departmentsQuery;
import static javaapplication14.indexPage.getConnection;
import static javaapplication14.indexPage.populateSchool;
import static javaapplication14.indexPage.schoolsQuery;
import javax.swing.JOptionPane;

/**
 *
 * @author ABC
 */
public class addCourse extends javax.swing.JFrame {

    /**
     * Creates new form addCourse
     */
    private static ArrayList<school> all_schools;
    private static ArrayList<department> all_departments;
    public addCourse() {
        try{
            initComponents();
            all_schools = new ArrayList<school>();
            Connection con = getConnection();
            ResultSet schools = schoolsQuery();
            ResultSet departments;

            Statement st = con.createStatement();
            ResultSet res = st.executeQuery("select count(*) from school");
            res.next();
            String[] allSchools = new String[res.getInt(1)];
            int x = 0;
            while (schools.next()) {
                allSchools[x] = (String) schools.getObject("school_name");
                x++;
            }
            schoolsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(allSchools));

            int selectedIndex = schoolsCombo.getSelectedIndex();
            String school_code = populateSchool().get(selectedIndex).getCode();
            departments = departmentsQuery(school_code);
            Statement st2 = con.createStatement();
            ResultSet res2 = st2.executeQuery("SELECT * FROM department WHERE school_code = '" + school_code + "';");
            int no_rows = 0;
            while (res2.next()){
                no_rows ++;
            }
            String[] allDepartments = new String[no_rows];
            int y = 0;
            while (departments.next()) {
                allDepartments[y] = (String) departments.getObject("department_name");
                y++;
            }
            departmentsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(allDepartments));
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        schoolsCombo = new javax.swing.JComboBox<>();
        departmentsCombo = new javax.swing.JComboBox<>();
        course_name = new javax.swing.JTextField();
        course_code = new javax.swing.JTextField();
        no_of_stu = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

        jLabel2.setText("school");

        jLabel3.setText("department");

        jLabel4.setText("course name");

        jLabel5.setText("course code");

        jLabel6.setText("no of students");

        schoolsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        schoolsCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schoolsComboActionPerformed(evt);
            }
        });

        departmentsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        departmentsCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentsComboActionPerformed(evt);
            }
        });

        jButton1.setText("save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 18)); // NOI18N
        jLabel1.setText("add course");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2)
                        .addGap(55, 55, 55)
                        .addComponent(schoolsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addGap(55, 55, 55)
                        .addComponent(departmentsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)
                        .addGap(55, 55, 55)
                        .addComponent(course_name, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5)
                        .addGap(55, 55, 55)
                        .addComponent(course_code, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(26, 26, 26)
                        .addComponent(no_of_stu, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(schoolsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(departmentsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel4))
                    .addComponent(course_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(course_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(no_of_stu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))))
                .addGap(41, 41, 41)
                .addComponent(jButton1)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void schoolsComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schoolsComboActionPerformed
        try {
            Connection con = getConnection();
            int selectedIndex = schoolsCombo.getSelectedIndex();
            String school_code = populateSchool().get(selectedIndex).getCode();
            ResultSet departments = departmentsQuery(school_code);
            departments = departmentsQuery(school_code);
            Statement st2 = con.createStatement();
            ResultSet res2 = st2.executeQuery("SELECT * FROM department WHERE school_code = '" + school_code + "';");
            //        res2.last();
            int no_rows = 0;
            while (res2.next()){
                no_rows ++;
            }
            String[] allDepartments = new String[no_rows];
            int y = 0;
            while (departments.next()) {
                allDepartments[y] = (String) departments.getObject("department_name");
                y++;
            }
            departmentsCombo.setModel(new javax.swing.DefaultComboBoxModel<>(allDepartments));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_schoolsComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{    
            Connection con = getConnection();
            String cn = course_name.getText().trim().toLowerCase();
            String cc = course_code.getText().trim().toLowerCase();
            int no_stu = Integer.parseInt(no_of_stu.getText().trim().toLowerCase());
            int sch_si = schoolsCombo.getSelectedIndex();
            int dep_si = departmentsCombo.getSelectedIndex();
            String school_code = populateSchool().get(schoolsCombo.getSelectedIndex()).getCode();
            String department_code = sepecificDepartments(sch_si).get(dep_si).getDepartmentCode();
            System.out.println(school_code);
            System.out.println(department_code);
            resetSchoolNumberOfStudents(school_code, no_stu);
            resetDepartmentNumberOfStudents(department_code, no_stu);
            PreparedStatement st = con.prepareStatement("INSERT INTO course(course_name, course_code, school_code, department_code, no_of_student) "
                    + "VALUES('" + cn + "', '" + cc + "', '" + school_code + "', '" + department_code + "', '" + no_stu + "');");
            st.executeUpdate();
            JOptionPane.showMessageDialog(null, "Record saved successfully");
            this.dispose();
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public static ArrayList<department> sepecificDepartments(int selectedIndex){
        try {
            Connection con = getConnection();
            Statement st = con.createStatement();
            all_departments = new ArrayList<department>();
            ResultSet res = st.executeQuery("SELECT * FROM department WHERE school_code = '" + populateSchool().get(selectedIndex).getCode() + "';");
            while (res.next()){
                department new_department = new department(res.getString("department_name"), res.getString("department_code"),
                        res.getInt("no_of_student"), populateSchool().get(selectedIndex).getName(),
                        populateSchool().get(selectedIndex).getCode(), populateSchool().get(selectedIndex).getNumberOfStudents());
                all_departments.add(new_department);
            }
            return all_departments;
        } catch (Exception ex) {
            Logger.getLogger(addCourse.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private void departmentsComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentsComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentsComboActionPerformed

    public static void resetSchoolNumberOfStudents(String school_code, int num) throws Exception{
        Connection con = getConnection();
        Statement schst = con.createStatement();
        ResultSet results = schst.executeQuery("SELECT no_of_student FROM school WHERE school_code = '" + school_code + "';");
        results.next();
        int new_num = results.getInt("no_of_student") + num;
        PreparedStatement reset = con.prepareStatement("UPDATE school SET no_of_student = '" + new_num + "' WHERE school_code = '" + school_code + "';");
        reset.executeUpdate();
    }
    
    public static void resetDepartmentNumberOfStudents(String department_code, int num) throws Exception{
        Connection con = getConnection();
        Statement schst = con.createStatement();
        ResultSet results = schst.executeQuery("SELECT no_of_student FROM department WHERE department_code = '" + department_code + "';");
        results.next();
        int new_num = results.getInt("no_of_student") + num;
        PreparedStatement reset = con.prepareStatement("UPDATE department SET no_of_student = '" + new_num + "' WHERE department_code = '" + department_code + "';");
        reset.executeUpdate();
    }
    
    public static ArrayList<department> populateDepartments(int selectedIndex) throws Exception{
        Connection con = getConnection();
        Statement st = con.createStatement();
        all_departments = new ArrayList<department>();
        ResultSet res = st.executeQuery("SELECT * FROM department WHERE school_code = '" + populateSchool().get(selectedIndex).getCode() + "';");
        while (res.next()){
            department new_department = new department(res.getString("department_name"), res.getString("department_code"), 
                    res.getInt("no_of_student"), populateSchool().get(selectedIndex).getName(), 
                            populateSchool().get(selectedIndex).getCode(), populateSchool().get(selectedIndex).getNumberOfStudents());
            all_departments.add(new_department);
        }
        return all_departments;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addCourse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addCourse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField course_code;
    private javax.swing.JTextField course_name;
    private javax.swing.JComboBox<String> departmentsCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField no_of_stu;
    private javax.swing.JComboBox<String> schoolsCombo;
    // End of variables declaration//GEN-END:variables
}
